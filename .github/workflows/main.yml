name: cicd-backend

on:
  push:
    branches:
      - main
# env: 
#   ECR_REPO_backend: ${{ secrets.ECR_REPO_backend }}
#   ECR_password: ${{ secrets.ECR_password }}
permissions:
      id-token: write   # âœ… Required for OIDC
      contents: read
jobs:
  build_image_deploy:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
         role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<ROLE_NAME>
         aws-region: us-east-1
      # - name: Log in to AWS 
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-region: us-east-1  # Replace with your AWS region
      #     aws-access-key-id: ${{ secrets.Access_key_id }}  
      #     aws-secret-access-key: ${{ secrets.Access_key }}  
      - name: getting the commid id as tag
        run: |
           echo "COMMIT_ID=$(git rev-parse --short=6 HEAD)" >> $GITHUB_ENV
      - name: Login to AWS ECR
        run: | 
           aws ecr get-login-password --region ${{ secrets.AWS_REGION}} | docker login --username AWS --password-stdin $ECR_password
      - name: Build Docker image
        run: |
          docker build -t backend:$COMMIT_ID .
          docker build -t mysql-aws:latest ./cronjob-requiremets/
      - name: Push image to ECR
        run: |
          docker tag backend:$COMMIT_ID ${{ secrets.ECR_REPO_backend }}:$COMMIT_ID
          docker push ${{ secrets.ECR_REPO_backend }}:$COMMIT_ID
          docker tag mysql-aws:latest ${{ secrets.MYSQL_REPO }}:latest
          docker push ${{ secrets.MYSQL_REPO }}:latest
    
  deploy_to_EKS:
    needs: build_image_deploy
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: getting the commid id as tag
        run: |
           echo "COMMIT_ID=$(git rev-parse --short=6 HEAD)" >> $GITHUB_ENV
      - name: Log in to AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # role-to-assume: arn:aws:iam::015800953128:role/admin-oidc
          # aws-region: us-east-1  # Replace with your AWS region
          # audience: sts.amazonaws.com
          aws-access-key-id: ${{ secrets.Access_key_id }}  
          aws-secret-access-key: ${{ secrets.Access_key }}
          aws-region: ${{ secrets.AWS_REGION}}  
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION}} --name ${{ secrets.CLUSTER_NAME}}

      - name: Deploy with Helm
        run: |
         helm upgrade --install ${{ secrets.HELM_RELEASE }} ./${{ secrets.HELM_REPO_PATH }} -f ${{ secrets.HELM_REPO_PATH }}/values.yaml \
         --set backend.image.tag=$COMMIT_ID \
         --description "Git Commit: $COMMIT_ID"
      - name: Restart Deployments
        run: |
         kubectl rollout restart deployment ${{ secrets.BACKEND_DEPLOYMENT_NAME}}
          
         
