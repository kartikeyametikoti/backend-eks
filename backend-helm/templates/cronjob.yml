apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup-cronjob
spec:
  schedule: "*/2 * * * *"  # Runs every 6 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mysql-backup
            image: bitnami/mysql:8.0
            command:
              - /bin/sh
              - -c
              - |
                mkdir -p /backup
                chown -R 1001:1001 /backup  # Ensure MySQL has write access
                mysqldump -u root -p$MYSQL_ROOT_PASSWORD kartikdatabase > /backup/mysql-backup.sql
                echo "Backup completed and stored in /backup!"
            securityContext:
              runAsUser: 1001
            volumeMounts:
              - name: backup-storage
                mountPath: /backup

          - name: aws-cli
            image: amazon/aws-cli:latest  # Separate AWS CLI container
            command:
              - /bin/sh
              - -c
              - |
                sleep 60  # Wait for MySQL backup to complete
                aws s3 cp /backup/mysql-backup.sql s3://kartikvuck1/mysql-backup-$(date +\%F).sql
                echo "Backup uploaded to S3!"
            env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: myapp-secret
                    key: MYSQL_ROOT_PASSWORD
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: myapp-secret
                    key: AWS_ACCESS_KEY_ID
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: myapp-secret
                    key: AWS_SECRET_ACCESS_KEY
              - name: AWS_DEFAULT_REGION
                value: "us-east-1"  # Change to your AWS region
            volumeMounts:
              - name: backup-storage
                mountPath: /backup
          restartPolicy: OnFailure
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-storage

